# ---------Initialize Simulation---------
clear
units         real
dimension     3
boundary    p p p
atom_style  charge
#atom_modify map array #likely is not needed

#timestep of 0.5 femptoseconds
variable printevery equal 5000
variable restartevery equal 0#500000
variable datapath string "${output_folder}data/"

variable dt equal .5 #timestep
variable Ti equal 300 #Starting temp
variable Tf equal 1500 
variable totSteps equal 30

variable i loop ${totSteps} #number of loops
variable dT equal $((v_Tf-v_Ti)/v_totSteps) #delta temp

variable stepsPerRun equal 100000

shell mkdir ${datapath}
#shell mkdir ${output_folder}/data/


# ---------Create Atoms-------------------
read_data data/SiOx.data

#HYDROGEN CREATION
#create a single hydrogen inside the pertubation
create_atoms 1 random 50 1234567 NULL overlap .4 maxtry 10000

# read_data data/SiOx-cool1.data

# ----------Define interatomic potential --------------
#Pair style reaxff requires use of exactly one of the fix qeq/reaxff or fix qeq/shielded or fix acks2/reaxff commands 
pair_style	    reaxff potential/topcon.control
pair_coeff	    * * potential/ffield_Nayir_SiO_2019.reax H O Si

#skin distance of 2 angstrom
neighbor        2 bin
neigh_modify    every 10 delay 0 check no


timestep ${dt}


#qeq/reax uses the Rappe and Goddard QEq technique which was used in the potential in Fogarty2010(p2) that this current potential is. based on 
fix r1 all qeq/reax 1 0.0 10.0 1e-6 reaxff
fix b1 all reaxff/bonds ${printevery} ${output_folder}bonds.dump
run 0

compute reax all pair reaxff

variable eb equal c_reax[1]        #eb = bond energy
variable ea equal c_reax[2]        #ea = atom energy
variable elp equal c_reax[3]       #elp = lone-pair energy
variable emol equal c_reax[4]      #emol = molecule energy (always 0.0)
variable ev equal c_reax[5]        #ev = valence angle energy
variable epen equal c_reax[6]      #epen = double-bond valence angle penalty
variable ecoa equal c_reax[7]      #ecoa = valence angle conjugation energy
variable ehb equal c_reax[8]       #ehb = hydrogen bond energy
variable et equal c_reax[9]        #et = torsion energy
variable eco equal c_reax[10]      #eco = conjugation energy
variable ew equal c_reax[11]       #ew = van der Waals energy
variable ep equal c_reax[12]       #ep = Coulomb energy
variable efi equal c_reax[13]      #efi = electric field energy (always 0.0)
variable eqeq equal c_reax[1]      #eqeq = charge equilibration energy
# compute      myKE all ke/atom
# compute      myPE all pe/atom
# compute      myStress all stress/atom NULL virial
# compute      flux all heat/flux myKE myPE myStress

dump d1 all custom ${printevery} ${output_folder}SlowishAnnealDT75.dump id type q x y z ix iy iz mass element vx vy vz
dump_modify d1 element H O Si

thermo ${printevery}
thermo_style custom step temp density vol pe ke etotal #flush yes
#thermo_style custom step temp density ke epair etotal v_eb v_ea v_elp v_ev v_epen v_ecoa v_ehb v_et v_eco v_ew v_ep v_eqeq
#restart ${restartevery} ${output_folder}SiOxRestart*.data

# min_style hftn
# minimize 1.0e-6 1.0e-6 1000 1000


label loopstart
variable curT equal $(v_Ti + v_i*v_dT)
print ${curT}

fix f1 all nvt temp ${curT} ${curT} 100
run $(v_stepsPerRun*(1/v_dt))
unfix f1

write_data ${datapath}AnnealLoop$(v_i).data
#write_data ${output_folder}data/SiOx-slowish$(v_i).data
# fix f1 all nve
# run $(150000*(1/v_dt))
# unfix f1

#write_data ${output_folder}SiOx-nve${i}.data

next i
jump SELF loopstart
